div.loader
{
    background: @black_95;
    height: 100%;
    opacity: 1;
    position: absolute;
        top: 0;
        left: 0;
        z-index: 1;
    width: 100%;

    &.complete
    {
        .transition(all 300ms ease-out);

        opacity: 0;

        // This is super important because the preloader displays above media.
        // Once loaded, we need to change the layer order so that interactive
        // controls aren't blocked by this div.
        z-index: -1;
    }

    .spinner
    {
        .animation(spinner 800ms infinite linear);

        border-top: 2px solid rgba(255, 255, 255, 0);
        border-right: 2px solid rgba(255, 255, 255, 0);
        border-bottom: 2px solid @black_24;
        border-left: 2px solid @black_24;
        font-size: 10px;
        margin-top: -1 * @spacing_unit_root / 2;
        margin-left: -1 * @spacing_unit_root / 2;
        position: absolute;
            top: 50%;
            left: 50%;
        text-indent: -9999em;
    }

    .spinner
    {
        border-radius: 50%;
        display: block;
        height: @spacing_unit_root;
        width: @spacing_unit_root;
    }

    /*
    .spinner::after
    {
        background: @black_24;
        border-radius: 50%;
        content: '';
        display: block;
        height: 6.000em;
        margin-left: -3em;
        margin-top: -3em;
        position: relative;
            top: 50%;
            left: 50%;
            //z-index: -1;
        width: 6.000em;
    }
    */
}

.transparent
{
    div.loader
    {
        background: @black_95;
    }
}

.media
{
    // Need to set this as default unfortunately due to how the elements
    // are loading with a custom directive in Angular. The image is
    // visible before it has loaded otherwise. It became a problem
    // with the introduction of the my-src directive, I believe.
    img
    {
        &.loading
        {
            opacity: 0;
            visibility: hidden;
        }

        &.complete
        {
            .transition(opacity 300ms ease-out);

            opacity: 1;
            visibility: visible;
        }
    }
}

// Keyframes

.keyframes(spinner,
{
    0%
    {
        .transform( rotate(0deg) );
    }

    100%
    {
        .transform( rotate(360deg) );
    }
});
