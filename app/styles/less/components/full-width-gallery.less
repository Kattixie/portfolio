.full-width-gallery()
{
    ul.gallery
    {
        line-height: 0;
        text-align: center;
    }

    // my-thumbnail
    .thumbnail
    {
        background: #000;
        display: inline-block;
        font-size: 1rem;
        //height: 358px; // Must be set to auto when rescaled according to width.
        position: relative;
            top: 0;
            left: 0;
        width: @thumb_width;

        &.loading
        {
            opacity: 0;
        }

        &.complete-add
        {
            .transition(all 150ms @ease_in_sine);

            opacity: 0;
        }

        &.complete-add.complete-add-active
        {
            // opacity: 1;
        }

        &.complete
        {
            opacity: 1;
        }

        &.complete-add-stagger
        {
            transition-delay: 25ms;
            transition-duration: 0s;
        }

        li.canvas
        {
            position: absolute;
                top: 0;
                right: 0;
                bottom: 0;
                left: 0;

            /* This works. Just not sold on the effect.
            &.faded-add
            {
                opacity: 1;
            }

            &.faded
            {
                .transition(opacity 300ms @ease_in_sine);

                opacity: 0.80;
            }

            &.faded-remove
            {
                opacity: 0.80;
            }

            &.faded-remove.faded-remove-active
            {
                .transition(opacity 100ms @ease_in_sine);

                opacity: 1;
            }
            */

            &.large
            {
                font-size: 1.15rem;

                .description
                {
                    ul.roles
                    {
                        display: block;
                    }
                }
            }

            &.small
            {
                font-size: .85rem;

                .description
                {
                    h3::after
                    {
                        border-bottom: 0;
                    }

                    ul.roles
                    {
                        display: none;
                    }
                }
            }
        }

        &::before
        {
            content: '';
            display: block;
            // This is really unfortunate, but since Chrome 49.0.26-ish, there's
            // sometimes a 1-pixel problem here. It doesn't show up at every
            // width, but the best I can figure is that something is happening
            // with how the padding renders as pixels. Reducing the height by
            // 1px may clip the image a little, but it prevents this problem
            // from manifesting.
            padding-bottom: (358 - 1) / 477 * 100%; 	// Ratio as percentage
        }

        .description
        {
            position: absolute;
                top: 0;
                right: 0;
                bottom: 0;
                left: 0;
            text-align: center;

            h3
            {
                //.rounded(27px);
                .transition(top 300ms @ease_in_sine);

                //border: 2px solid #fff;
                color: #fff;
                display: inline-block;
                font-family: @title_face;
                //font-size: 22px;
                font-size: 1.375em;
                //height: 50px;
                letter-spacing: 1px;
                line-height: 1.375em;
                margin: (@spacing_unit + @spacing_unit / 2) 1.5em 0 1.5em;
                //margin: 20% 10% 0 10%;
                //padding: 0 25px;
                position: relative;
                    top: 0;
                    left: 0;
                //text-transform: uppercase;
            }

            h3::after
            {
                .transition(all 300ms ease-out);

                content: '';
                border-bottom: 2px solid #fff;
                position: absolute;
                    bottom: -30px;
                    left: 50%;
                margin-left: -30px;
                width: 60px;
            }

            ul.roles
            {
                // .transition(all 300ms ease-out);

                display: none;
                padding: 0 @spacing_unit_root / 2;
                position: absolute;
                    bottom: @spacing_unit_root / 2;
                    left: 0;
                    right: 0;
                text-align: center;

                li
                {
                    color: #fff;
                    display: inline-block;
                    font-family: @body_face;
                    font-size: 0.688em; // 11px
                    //font-style: italic;
                    font-weight: 500;
                    // letter-spacing: 2px;
                    //line-height: 22px;
                    line-height: 1.625em;
                    margin-left: .625em;
                    // text-transform: uppercase;

                    &::before
                    {
                        //content: '\00D7';
                        // content: '/';
                        // content: '\000AC';
                        content: '\022C5';
                        margin-right: .625em;
                    }

                    &:first-child::before
                    {
                        content: '';
                        margin-right: 0;
                    }
                }
            }
        }

        &:hover .description h3
        {
            top: -1 * @spacing_unit / 2;
        }

        &:hover h3::after
        {
            //bottom: -40px;
        }

        a
        {
            //background: #ebebeb;
            /*
            display: block;
            height: 358px;
            position: relative;
                top: 0;
                left: 0;
                z-index: 1;
            overflow: hidden;
            width: @thumb_width;
            */
            display: block;
            position: absolute;
                top: 0;
                right: 0;
                bottom: 0;
                left: 0;
            overflow: hidden;

            /*
            &::before
            {
                content: '';
                display: block;
                padding-top: 100%; 	/* initial ratio of 1:1
            }
            */

            img
            {
                //.transition(all 300ms ease-out);
                //-transition-delay: 100ms;

                display: block;
                height: auto;
                position: absolute;
                    top: 0;
                    right: 0;
                    bottom: 0;
                    left: 0;
                //max-width: @thumb_width; // Temporary fix to floating scrollbar issue.
                width: 100%;

                /* Used this to test a downscaling issue that's emerged in the
                latest version of Chrome. This helps, but it's worse at really
                downscaled levels and it looks horrible in Firefox.
                image-rendering: -moz-crisp-edges;
                image-rendering: -o-crisp-edges;
                image-rendering: -webkit-optimize-contrast;
                */
            }

            &:hover img
            {
                //opacity: 0;
                //top: -358px;
                //transform: scale(1.01);
                //image-rendering: pixelated;
            }
        }
    }

    // Media Queries

    @media (max-width: @1_column_width)
    {
        //.query-name('max-width: 1 column width');

        ul.gallery .thumbnail
        {
            //height: auto;
            width: 100%;
        }
    }

    @media (min-width: (@1_column_width + 1px)) and (max-width: @2_column_width)
    {
        //.query-name('min-width: 1 column width + 1px AND max-width: 2 column width');

        ul.gallery .thumbnail
        {
            // height: auto;
            width: 50%;
        }
    }


    @media (min-width: (@2_column_width + 1px)) and (max-width: @3_column_width)
    {
        //.query-name('min-width: 2 column width + 1px AND max-width: 3 column width');

        ul.gallery .thumbnail
        {
            // height: auto;
            width: 1/3 * 100%;
        }
    }

    // This one trips me up because it's just about the exact width of my monitor
    // and falls in that zone where media queries are active about the width of
    // your scrollbar sooner than you expect.
    //
    // Could guessing the scrollbar width cause problems on devices with "floating
    // scrollbars" where the thumbnail image maxes out? Confirmed: emulate a device
    // with 1920 pixels of width and a floating scrollbar. Might not be able to win
    // a pixel precise battle of this sort without JavaScript. The problem seems to
    // be that media queries have evolved in a manner that ignores the scroll bar's
    // impact on how elements will wrap or occupy width, at least on modern
    // browsers. We are moving into a floating scrollbar world, but on older
    // operating systems it still matters.
    //
    //		http://www.quirksmode.org/css/tests/mediaqueries/width.html
    // 		@media (max-width: (@4_column_width + @scrollbar_width))
    @media (min-width: (@3_column_width + 1px)) and (max-width: @4_column_width)
    {
        //.query-name('min-width: 3 column width + 1px AND max-width: 4 column width');

        ul.gallery .thumbnail
        {
            // height: auto;
            width: 25%;
        }
    }

    @media (min-width: (@4_column_width + 1px)) and (max-width: @5_column_width)
    {
        //.query-name('min-width: 4 column width + 1px AND max-width: 5 column width');

        ul.gallery .thumbnail
        {
            // height: auto;
            width: 20%;
            // margin: 0 @spacing_unit_root / 4 @spacing_unit_root / 2 @spacing_unit_root / 4;
        }
    }

    @media (min-width: (@5_column_width + 1px))
    {
        //.query-name('min-width: 5 column width + 1px');

        ul.gallery .thumbnail
        {
            // height: auto;
            width: @thumb_width;
        }
    }
}
